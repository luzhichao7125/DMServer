{"version":3,"file":"srv.js","sources":["../../../.ts-plugin/src/strapi.ts","../../../.ts-plugin/src/plugins/dm-page.plugin/dm-page-stat.ts","../../../.ts-plugin/src/plugins/dm-page.plugin/dm-page.ts","../../../.ts-plugin/src/srv.ts"],"sourcesContent":["export interface IDoc {\n  id: number\n  created_at: string\n  updated_at: string\n}\n\ninterface Log {\n  fatal(message?: any, ...optionalParams: any[]): void\n  error(message?: any, ...optionalParams: any[]): void\n  warn(message?: any, ...optionalParams: any[]): void\n  info(message?: any, ...optionalParams: any[]): void\n  debug(message?: any, ...optionalParams: any[]): void\n}\n\ninterface CRUD {\n  // https://strapi.io/documentation/v3.x/concepts/queries.html#api-reference\n  create(collection_data: any): Array<any>\n  // _sort filed_name:asc|desc|ASC|DESC\n  find(\n    query_param:\n      | any\n      | {\n          _sort?: 'filed_name:asc' | 'filed_name:desc'\n          _limit: number\n          _start: number\n        }\n  ): Array<IDoc>\n  update(query_param: any | { id: number }, collection_data: any): Array<any>\n  delete(query_param: any): Array<any>\n}\nexport const UTIL_public_doc = (doc: any) => {\n  let d = JSON.parse(JSON.stringify(doc))\n  delete d['created_by']\n  delete d['updated_by']\n  return d\n}\nexport interface IStrapi {\n  // socket.io\n  io?: any\n  log: Log\n  server?: any\n  query(content: string): CRUD\n}\n\ndeclare let strapi: IStrapi\nexport const strapi_ = strapi\n","import { strapi_, IDoc } from '../../strapi'\n\nlet strapi = strapi_\nconst request = require('request')\ninterface Idoc_plugin_conf extends IDoc {\n  name: string\n  rpc_server_url: string\n  stat_from: string\n}\nexport class DouyinStat {\n  init = false\n  douyin_pk_conf: any = null\n  douyin_pages_loaded = {}\n  stat_pk: any = {}\n  async boot() {\n    strapi_.log.info('douyin stat boot')\n    const [entry] = (await strapi\n      .query('plugin-conf')\n      .find({ name: 'douyin-pk' })) as Array<Idoc_plugin_conf>\n\n    if (entry) {\n      strapi.log.info('dm service index', entry.name)\n      this.init_ws(entry['rpc_server_url'])\n      this.douyin_pk_conf = entry\n      this.stat_pk = {}\n\n      // strapi.log.info(\"dm-plugin today\", this.today_date);\n      // strapi.log.info(\"strapi.services\", strapi.services);\n      await this.calc_pk()\n    }\n  }\n  async init_ws(url: string) {\n    if (url) {\n      // i\n      if (url.charAt(url.length - 1) === '/')\n        url = url.substr(0, url.length - 1)\n      strapi.log.info('conf server url:', url)\n      setInterval(async () => {\n        // heart polling\n        // get active conf\n        await request(\n          url + '/srv/dm-plugin/get',\n          async (err: any, res: any, body: any) => {\n            strapi.log.debug('[ping]', url + '/srv/dm-plugin/get')\n            if (this.douyin_pk_conf) {\n              const data = JSON.parse(body)\n              await this.update_conf(data)\n              await this.compare_stat_upload(data, url)\n            }\n          }\n        ) // request\n      }, 3000)\n\n      // var socket = require('socket.io-client')(url);\n      // socket.on('connect', function(){\n      //   strapi.log.info('init ws conf', url)\n      // });\n      // socket.on('event', function(data){});\n      // socket.on('disconnect', function(){});\n    }\n  }\n  async update_conf(data: any) {\n    // strapi.log.info('update active cond', _this.douyin_pk_conf)\n    if (\n      data &&\n      this.douyin_pk_conf['conf_updated_at'] !==\n        data['option_conf']['conf_updated_at']\n    ) {\n      if (data['option_conf']) {\n        this.douyin_pk_conf['data']['option_arr'] =\n          data['option_conf']['option_arr']\n      }\n      this.douyin_pk_conf['stat_from'] = data['option_conf']['stat_from']\n      this.douyin_pk_conf['conf_updated_at'] =\n        data['option_conf']['conf_updated_at']\n      await strapi\n        .query('plugin-conf')\n        .update({ id: this.douyin_pk_conf['id'] }, this.douyin_pk_conf)\n      strapi.log.info('update active cond', this.douyin_pk_conf['data'])\n      this.boot()\n    }\n  }\n  async compare_stat_upload(data: any, url: string) {\n    // compare count\n    let option_arr = this.douyin_pk_conf['data']['option_arr']\n    let remote_option_arr = data['option_conf']['option_arr']\n    if (option_arr) {\n      let is_new_stat = false\n\n      // strapi.log.info('remote:', remote_option_arr)\n      for (let remote_option of remote_option_arr) {\n        let query = remote_option['query']\n        if (this.stat_pk[query] !== remote_option['count']) {\n          is_new_stat = true\n          remote_option['count'] = this.stat_pk[query]\n        }\n      }\n\n      if (is_new_stat) {\n        strapi.log.info('new stat', this.stat_pk)\n        await request(\n          {\n            url: url + '/srv/dm-plugin/stat',\n            method: 'POST',\n            json: true,\n            headers: {\n              'content-type': 'application/json'\n            },\n            body: { option_conf: { option_arr: remote_option_arr } }\n          },\n          function(error: any, response: any, body: any) {\n            if (!error && response.statusCode == 200) {\n            }\n          }\n        )\n      }\n    }\n  }\n  async calc_pk(start = 0) {\n    const [entry] = (await strapi\n      .query('plugin-conf')\n      .find({ name: 'douyin-pk' })) as Array<Idoc_plugin_conf>\n\n    if (entry) {\n      let find_from = entry['stat_from']\n      let dm_pages = await strapi\n        .query('dm-page')\n        .find({ created_at_gt: find_from, _start: start })\n      if (dm_pages.length) {\n        strapi.log.info('active conf option_arr')\n        for (let option of this.douyin_pk_conf['data']['option_arr']) {\n          strapi.log.info('--option', option)\n        }\n        for (let page of dm_pages) {\n          this.calc_page(page)\n        }\n        // this.stat_pk = stat_pk;\n        strapi.log.info(':::stat_from', find_from, 'start', start)\n        strapi.log.info(':::dm-pages count:', dm_pages.length)\n        strapi.log.info(':::stat_', this.stat_pk)\n        // strapi.log.info(\":::stat_\", this.stat_pk);\n        if (dm_pages.length === 100) {\n          this.calc_pk(start + 100)\n        }\n      } else {\n        strapi.log.info('stat_pk', 'no dm-page from', find_from)\n      }\n    }\n  }\n  async calc_page(page: any) {\n    const find_query = function(text: any, pk_conf: any, stat_pk: any) {\n      for (let option of pk_conf['data']['option_arr']) {\n        const { query } = option\n        if (!stat_pk[query]) stat_pk[query] = 0\n        if (query && text.includes(query)) {\n          stat_pk[query]++\n          // strapi.log.info(\"calc_pk\", query, stat_pk[query]);\n        }\n      }\n    }\n    const { data } = page\n    if (data && data['dm_arr']) {\n      for (let dm of data['dm_arr']) {\n        //   strapi.log.info(\"calc_pk\", dm);\n        const { text } = dm\n        find_query(text, this.douyin_pk_conf, this.stat_pk)\n      }\n    }\n  }\n}\n","import { strapi_ } from '../../strapi'\nimport { DouyinStat } from './dm-page-stat'\nconst strapi = strapi_\nconst douyinStatSrv = new DouyinStat()\nsetTimeout(async () => {\n  await douyinStatSrv.boot()\n}, 2000)\nexport const PLUG_POST_dm_page = async (ctx: any) => {\n  // post new dmk_list from airtest\n  const { dmk_list } = ctx.request.body as any\n  strapi.log.info('PLUG_POST_dm_page', dmk_list.length)\n  \n  let new_dm_arr = []\n  if (dmk_list && dmk_list.length > 0) {\n    strapi.log.info('receive from airtest<==dmk_list:', dmk_list.length)\n    for (let dmk of dmk_list) {\n      let a = dmk.split('：')\n      if (a.length > 1) {\n        let username = a.shift()\n        let text = a.join('：')\n        strapi.log.info(`::${username}: `, text)\n        new_dm_arr.push({ username, text })\n      }\n    }\n  }\n  let entry: any\n  if (new_dm_arr.length) {\n    // let timestamp_sec = Math.floor(new Date().getTime() / 1000);\n    let new_page = {\n      data: { dm_arr: new_dm_arr }\n    }\n    entry = await strapi.query('dm-page').create(new_page)\n    let created_at = entry['created_at'] as any\n    strapi.log.info('new dm-page created_at', created_at)\n    douyinStatSrv.calc_page(new_page)\n    strapi.log.info('stat_pk', douyinStatSrv.stat_pk)\n  }\n  // Send 200 `ok`\n  ctx.send({\n    message: 'ok',\n    create_count: new_dm_arr.length\n  })\n}\nexport const PLUG_POST_update_conf = async (ctx: any) => {\n  await douyinStatSrv.boot()\n  ctx.send({\n    message: 'ok',\n    stat: douyinStatSrv.stat_pk,\n    conf: douyinStatSrv.douyin_pk_conf['data'] as any\n  })\n}\nexport const PLUG_GET_dm_page = async (ctx: any) => {\n  strapi.log.info('dm stat start')\n  // Send 200 `ok`\n  ctx.send({\n    message: 'ok',\n    stat: douyinStatSrv.stat_pk,\n    conf: douyinStatSrv.douyin_pk_conf['data'] as any\n  })\n}\n","import {\n    PLUG_GET_dm_page,\n    PLUG_POST_dm_page\n} from './plugins/dm-page.plugin/dm-page'\n//┌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┐\n//╎                plugin routes\n//╎\n//╎\n//└╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┘\n\nconst POST_plugins: any = {\n    boot: PLUG_POST_dm_page,\n    'dm-page': PLUG_POST_dm_page\n}\nconst GET_plugins: any = {\n    // /srv/dm-page/get\n    'dm-page': PLUG_GET_dm_page\n}\n//┌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┐\n//╎                 strapi handler\n//╎\n//╎\n//└╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┘\nmodule.exports = {\n    index: async (ctx: any) => {\n        const { plugin_name } = ctx.params\n        await handle(GET_plugins, plugin_name, ctx)\n    },\n    index_post: async (ctx: any) => {\n        const { plugin_name } = ctx.params\n        await handle(POST_plugins, plugin_name, ctx)\n    }\n}\n//┌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┐\n//╎                  handler\n//╎\n//╎\n//└╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┘\nconst handle = async (plugin_routes: any, plugin_name: string, ctx: any) => {\n    const func = plugin_routes[plugin_name]\n    if (func) await func(ctx)\n    else\n        ctx.send({\n            msg: 'no plugin',\n            plugin_name\n        })\n}\n"],"names":["strapi"],"mappings":"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"}