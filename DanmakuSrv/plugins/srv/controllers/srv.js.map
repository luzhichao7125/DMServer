{"version":3,"file":"srv.js","sources":["../../../.ts-plugin/src/strapi.ts","../../../.ts-plugin/src/plugins/dm-page.plugin/dm-page-stat.ts","../../../.ts-plugin/src/plugins/dm-page.plugin/dm-page.ts","../../../.ts-plugin/src/srv.ts"],"sourcesContent":["export interface IDoc {\n  id: number\n  created_at: string\n  updated_at: string\n}\n\ninterface Log {\n  fatal(message?: any, ...optionalParams: any[]): void\n  error(message?: any, ...optionalParams: any[]): void\n  warn(message?: any, ...optionalParams: any[]): void\n  info(message?: any, ...optionalParams: any[]): void\n  debug(message?: any, ...optionalParams: any[]): void\n}\n\ninterface CRUD {\n  // https://strapi.io/documentation/v3.x/concepts/queries.html#api-reference\n  create(collection_data: any): Array<any>\n  // _sort filed_name:asc|desc|ASC|DESC\n  find(\n    query_param:\n      | any\n      | {\n          _sort?: 'filed_name:asc' | 'filed_name:desc'\n          _limit: number\n          _start: number\n        }\n  ): Array<IDoc>\n  update(query_param: any | { id: number }, collection_data: any): Array<any>\n  delete(query_param: any): Array<any>\n}\nexport const UTIL_public_doc = (doc: any) => {\n  let d = JSON.parse(JSON.stringify(doc))\n  delete d['created_by']\n  delete d['updated_by']\n  return d\n}\nexport interface IStrapi {\n  // socket.io\n  io?: any\n  log: Log\n  server?: any\n  query(content: string): CRUD\n}\n\ndeclare let strapi: IStrapi\nexport const strapi_ = strapi\n","import { strapi_, IDoc } from '../../strapi'\n\nlet strapi = strapi_\nconst request = require('request')\n\nconst post_data = async (url: string, data: any) => {\n    await request(\n        {\n            url,\n            method: 'POST',\n            json: true,\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: data\n        },\n        function (error: any, response: any, body: any) {\n            if (!error && response.statusCode == 200) {\n            }\n        }\n    )\n}\ninterface Idoc_plugin_conf extends IDoc {\n    name: string\n    rpc_server_url: string\n    stat_from: string\n}\nexport class DouyinStat {\n    init = false\n    douyin_pk_conf: any = null\n    douyin_pages_loaded = {}\n    stat_pk: any = {}\n    async boot() {\n        strapi_.log.info('douyin stat boot')\n        const [entry] = (await strapi\n            .query('plugin-conf')\n            .find({ name: 'douyin-pk' })) as Array<Idoc_plugin_conf>\n\n        if (entry) {\n            strapi.log.info('dm service index', entry.name)\n            this.init_ws_poll(entry['rpc_server_url'])\n            this.douyin_pk_conf = entry\n            this.stat_pk = {}\n\n            // strapi.log.info(\"dm-plugin today\", this.today_date);\n            // strapi.log.info(\"strapi.services\", strapi.services);\n            await this.calc_pk()\n        }\n    }\n    async init_ws_poll(rpc_url: string) {\n        if (rpc_url) {\n            // i\n            if (rpc_url.charAt(rpc_url.length - 1) === '/')\n                rpc_url = rpc_url.substr(0, rpc_url.length - 1)\n            strapi.log.info('conf server url:', rpc_url)\n            setInterval(async () => {\n                // heart polling\n                // get active conf\n                await request(\n                    rpc_url + '/srv/dm-plugin/get',\n                    async (err: any, res: any, body: any) => {\n                        strapi.log.debug('[ping]', rpc_url + '/srv/dm-plugin/get')\n                        if (this.douyin_pk_conf) {\n                            const data = JSON.parse(body)\n                            await this.update_conf(data)\n                            await this.compare_stat_upload(data, rpc_url)\n                        }\n                    }\n                ) // request\n            }, 3000)\n\n            var socket = require('socket.io-client')(rpc_url);\n            socket.on('connect', function () {\n                strapi.log.info('init ws conf', rpc_url)\n            });\n            socket.on('DM_EVENT_GET_LAST_DM', async (data: any) => {\n                if (Number(data['amount']) > 0) {\n                    let dm_arr = await this.find_lottery_user(data['amount'], 0, [])\n                    strapi_.log.info('douyinStatSrv dm_arr', dm_arr.length)\n                    // rpc_url\n                    await post_data(rpc_url + '/srv/dm-plugin/last-dm/', { dm_arr })\n                }\n\n            });\n            socket.on('disconnect', function () { });\n        }\n    }\n    async find_lottery_user(amount: number, start: number, $dm_arr: Array<any>) {\n        const find_dm = (page: any, dm_arr: Array<any>) => {\n            const { data } = page\n            if (data && data['dm_arr'] && data['dm_arr'].length) {\n                strapi_.log.info('find_lottery_user concat:', data['dm_arr'].length)\n                // return dm_arr.concat(data['dm_arr'])\n                for (let i = 0; i < data['dm_arr'].length; i++) {\n                    const dm = data['dm_arr'][i];\n                    dm_arr.push(dm)\n                }\n            }\n        }\n        let find_from = this.douyin_pk_conf['stat_from']\n        let dm_pages = await strapi\n            .query('dm-page')\n            .find({ created_at_gt: find_from, _start: start,_sort:'created_at:desc' })\n        for (let page of dm_pages) {\n            if ($dm_arr.length < amount)\n                find_dm(page, $dm_arr)\n            else break\n        }\n        strapi_.log.info('find_lottery_user need:', amount, 'find', $dm_arr.length)\n        if (dm_pages.length === 100 && $dm_arr.length < amount) {\n            await this.find_lottery_user(amount, start + 100, $dm_arr)\n        }\n        return $dm_arr\n    }\n    async update_conf(data: any) {\n        // strapi.log.info('update active cond', _this.douyin_pk_conf)\n        if (\n            data &&\n            this.douyin_pk_conf['conf_updated_at'] !==\n            data['option_conf']['conf_updated_at']\n        ) {\n            if (data['option_conf']) {\n                this.douyin_pk_conf['data']['option_arr'] =\n                    data['option_conf']['option_arr']\n            }\n            this.douyin_pk_conf['stat_from'] = data['option_conf']['stat_from']\n            this.douyin_pk_conf['conf_updated_at'] =\n                data['option_conf']['conf_updated_at']\n            await strapi\n                .query('plugin-conf')\n                .update({ id: this.douyin_pk_conf['id'] }, this.douyin_pk_conf)\n            strapi.log.info('update active cond', this.douyin_pk_conf['data'])\n            this.boot()\n        }\n    }\n    async compare_stat_upload(data: any, url: string) {\n        // compare count\n        let option_arr = this.douyin_pk_conf['data']['option_arr']\n        let remote_option_arr = data['option_conf']['option_arr']\n        if (option_arr) {\n            let is_new_stat = false\n\n            // strapi.log.info('remote:', remote_option_arr)\n            for (let remote_option of remote_option_arr) {\n                let query = remote_option['query']\n                if (this.stat_pk[query] !== remote_option['count']) {\n                    is_new_stat = true\n                    remote_option['count'] = this.stat_pk[query]\n                }\n            }\n\n            if (is_new_stat) {\n                strapi.log.info('new stat', this.stat_pk)\n                await post_data(url + '/srv/dm-plugin/stat', { option_conf: { option_arr: remote_option_arr } })\n                // await request(\n                //     {\n                //         url: url + '/srv/dm-plugin/stat',\n                //         method: 'POST',\n                //         json: true,\n                //         headers: {\n                //             'content-type': 'application/json'\n                //         },\n                //         body: { option_conf: { option_arr: remote_option_arr } }\n                //     },\n                //     function (error: any, response: any, body: any) {\n                //         if (!error && response.statusCode == 200) {\n                //         }\n                //     }\n                // )\n            }\n        }\n    }\n    async calc_pk(start = 0) {\n        const [entry] = (await strapi\n            .query('plugin-conf')\n            .find({ name: 'douyin-pk' })) as Array<Idoc_plugin_conf>\n\n        if (entry) {\n            let find_from = entry['stat_from']\n            let dm_pages = await strapi\n                .query('dm-page')\n                .find({ created_at_gt: find_from, _start: start })\n            if (dm_pages.length) {\n                strapi.log.info('active conf option_arr')\n                for (let option of this.douyin_pk_conf['data']['option_arr']) {\n                    strapi.log.info('--option', option)\n                }\n                for (let page of dm_pages) {\n                    this.calc_page(page)\n                }\n                // this.stat_pk = stat_pk;\n                strapi.log.info(':::stat_from', find_from, 'start', start)\n                strapi.log.info(':::dm-pages count:', dm_pages.length)\n                strapi.log.info(':::stat_', this.stat_pk)\n                // strapi.log.info(\":::stat_\", this.stat_pk);\n                if (dm_pages.length === 100) {\n                    this.calc_pk(start + 100)\n                }\n            } else {\n                strapi.log.info('stat_pk', 'no dm-page from', find_from)\n            }\n        }\n    }\n    async calc_page(page: any) {\n        const find_query = function (text: any, pk_conf: any, stat_pk: any) {\n            for (let option of pk_conf['data']['option_arr']) {\n                const { query } = option\n                if (!stat_pk[query]) stat_pk[query] = 0\n                if (query && text.includes(query)) {\n                    stat_pk[query]++\n                    // strapi.log.info(\"calc_pk\", query, stat_pk[query]);\n                }\n            }\n        }\n        const { data } = page\n        if (data && data['dm_arr']) {\n            for (let dm of data['dm_arr']) {\n                //   strapi.log.info(\"calc_pk\", dm);\n                const { text } = dm\n                find_query(text, this.douyin_pk_conf, this.stat_pk)\n            }\n        }\n    }\n}\n","import { strapi_ } from '../../strapi'\nimport { DouyinStat } from './dm-page-stat'\nconst strapi = strapi_\nconst douyinStatSrv = new DouyinStat()\nsetTimeout(async () => {\n  await douyinStatSrv.boot()\n  let dm_arr = await douyinStatSrv.find_lottery_user(100,0,[])\n  strapi_.log.info('douyinStatSrv dm_arr',dm_arr.length)\n}, 2000)\nexport const PLUG_POST_dm_page = async (ctx: any) => {\n  // post new dmk_list from airtest\n  const { dmk_list } = ctx.request.body as any\n  strapi.log.info('PLUG_POST_dm_page', dmk_list.length)\n\n  let new_dm_arr = []\n  if (dmk_list && dmk_list.length > 0) {\n    strapi.log.info('receive from airtest<==dmk_list:', dmk_list.length)\n    for (let dmk of dmk_list) {\n      let a = dmk.split('：')\n      if (a.length > 1) {\n        let username = a.shift()\n        let text = a.join('：')\n        strapi.log.info(`::${username}: `, text)\n        new_dm_arr.push({ username, text })\n      }\n    }\n  }\n  let entry: any\n  if (new_dm_arr.length) {\n    // let timestamp_sec = Math.floor(new Date().getTime() / 1000);\n    let new_page = {\n      data: { dm_arr: new_dm_arr }\n    }\n    entry = await strapi.query('dm-page').create(new_page)\n    let created_at = entry['created_at'] as any\n    strapi.log.info('new dm-page created_at', created_at)\n    douyinStatSrv.calc_page(new_page)\n    strapi.log.info('stat_pk', douyinStatSrv.stat_pk)\n  }\n  // Send 200 `ok`\n  ctx.send({\n    message: 'ok',\n    create_count: new_dm_arr.length\n  })\n}\nexport const PLUG_POST_update_conf = async (ctx: any) => {\n  await douyinStatSrv.boot()\n  ctx.send({\n    message: 'ok',\n    stat: douyinStatSrv.stat_pk,\n    conf: douyinStatSrv.douyin_pk_conf['data'] as any\n  })\n}\nexport const PLUG_GET_dm_page = async (ctx: any) => {\n  strapi.log.info('dm stat start')\n  // Send 200 `ok`\n  ctx.send({\n    message: 'ok',\n    stat: douyinStatSrv.stat_pk,\n    conf: douyinStatSrv.douyin_pk_conf['data'] as any\n  })\n}\n","import {\n  PLUG_GET_dm_page,\n  PLUG_POST_dm_page\n} from './plugins/dm-page.plugin/dm-page'\n//┌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┐\n//╎                plugin routes\n//╎\n//╎\n//└╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┘\n\nconst POST_plugins: any = {\n  boot: PLUG_POST_dm_page,\n  'dm-page': PLUG_POST_dm_page\n}\nconst GET_plugins: any = {\n  // /srv/dm-page/get\n  'dm-page': PLUG_GET_dm_page\n}\n//┌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┐\n//╎                 strapi handler\n//╎\n//╎\n//└╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┘\nmodule.exports = {\n  index: async (ctx: any) => {\n    const { plugin_name } = ctx.params\n    await handle(GET_plugins, plugin_name, ctx)\n  },\n  index_post: async (ctx: any) => {\n    const { plugin_name } = ctx.params\n    await handle(POST_plugins, plugin_name, ctx)\n  }\n}\n//┌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┐\n//╎                  handler\n//╎\n//╎\n//└╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┘\nconst handle = async (plugin_routes: any, plugin_name: string, ctx: any) => {\n  const func = plugin_routes[plugin_name]\n  if (func) await func(ctx)\n  else\n    ctx.send({\n      msg: 'no plugin',\n      plugin_name\n    })\n}\n"],"names":["strapi"],"mappings":"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"}