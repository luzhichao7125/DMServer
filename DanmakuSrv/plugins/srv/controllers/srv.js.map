{"version":3,"file":"srv.js","sources":["../../../.ts-plugin/src/strapi.ts","../../../.ts-plugin/src/plugins/dm-page.plugin/dm-page-stat.ts","../../../.ts-plugin/src/plugins/dm-page.plugin/dm-page.ts","../../../.ts-plugin/src/srv.ts"],"sourcesContent":["export interface IDoc {\r\n    id: number;\r\n    created_at: string;\r\n    updated_at: string;\r\n}\r\n\r\ninterface Log {\r\n    fatal(message?: any, ...optionalParams: any[]): void\r\n    error(message?: any, ...optionalParams: any[]): void\r\n    warn(message?: any, ...optionalParams: any[]): void\r\n    info(message?: any, ...optionalParams: any[]): void\r\n    debug(message?: any, ...optionalParams: any[]): void\r\n}\r\n\r\ninterface CRUD {\r\n    // https://strapi.io/documentation/v3.x/concepts/queries.html#api-reference\r\n    create(collection_data: any): Array<any>\r\n    // _sort filed_name:asc|desc|ASC|DESC\r\n    find(\r\n        query_param:\r\n            | any\r\n            | {\r\n                _sort?: 'filed_name:asc' | 'filed_name:desc'\r\n                _limit: number\r\n                _start: number\r\n            }\r\n    ): Array<IDoc>\r\n    update(query_param: any | { id: number }, collection_data: any): Array<any>\r\n    delete(query_param: any): Array<any>\r\n}\r\nexport const UTIL_public_doc = (doc: any) => {\r\n    let d = JSON.parse(JSON.stringify(doc))\r\n    delete d['created_by']\r\n    delete d['updated_by']\r\n    return d\r\n}\r\nexport interface IStrapi {\r\n    // socket.io\r\n    io?: any\r\n    log: Log\r\n    server?: any\r\n    query(content: string): CRUD\r\n}\r\n\r\ndeclare let strapi: IStrapi\r\nexport const strapi_ = strapi\r\n","import { strapi_, IDoc } from \"../../strapi\";\r\n\r\nlet strapi = strapi_\r\nconst request = require(\"request\")\r\ninterface Idoc_plugin_conf extends IDoc {\r\n    name: string\r\n    rpc_server_url: string\r\n    stat_from: string\r\n}\r\nexport class DouyinStat {\r\n    init = false\r\n    douyin_pk_conf: any = null\r\n    douyin_pages_loaded = {}\r\n    stat_pk: any = {}\r\n    async boot() {\r\n        strapi_.log.info('douyin stat boot')\r\n        const [entry] = await strapi\r\n            .query(\"plugin-conf\")\r\n            .find({ name: \"douyin-pk\" }) as Array<Idoc_plugin_conf>\r\n\r\n        if (entry) {\r\n            strapi.log.info(\"dm service index\", entry.name);\r\n            this.init_ws(entry['rpc_server_url'])\r\n            this.douyin_pk_conf = entry;\r\n            this.stat_pk = {};\r\n\r\n            // strapi.log.info(\"dm-plugin today\", this.today_date);\r\n            // strapi.log.info(\"strapi.services\", strapi.services);\r\n            await this.calc_pk();\r\n        }\r\n    }\r\n    async init_ws(url: string) {\r\n        if (url) {\r\n            // i\r\n            if (url.charAt(url.length - 1) === '/')\r\n                url = url.substr(0, url.length - 1)\r\n            strapi.log.info('conf server url:', url)\r\n            setInterval(async () => {\r\n                // heart polling\r\n                // get active conf\r\n                await request(url + '/srv/dm-plugin/get', async (err: any, res: any, body: any) => {\r\n                    strapi.log.debug('[ping]', url + '/srv/dm-plugin/get')\r\n                    if (this.douyin_pk_conf) {\r\n                        const data = JSON.parse(body)\r\n                        await this.update_conf(data)\r\n                        await this.compare_stat_upload(data, url)\r\n                    }\r\n                })// request\r\n            }, 3000)\r\n\r\n            // var socket = require('socket.io-client')(url);\r\n            // socket.on('connect', function(){\r\n            //   strapi.log.info('init ws conf', url)\r\n            // });\r\n            // socket.on('event', function(data){});\r\n            // socket.on('disconnect', function(){});\r\n        }\r\n    }\r\n    async update_conf(data: any) {\r\n        // strapi.log.info('update active cond', _this.douyin_pk_conf)\r\n        if (data && this.douyin_pk_conf['conf_updated_at'] !== data['option_conf']['conf_updated_at']) {\r\n            if (data['option_conf']) {\r\n                this.douyin_pk_conf['data']['option_arr'] = data['option_conf']['option_arr']\r\n            }\r\n            this.douyin_pk_conf['stat_from'] = data['option_conf']['stat_from']\r\n            this.douyin_pk_conf['conf_updated_at'] = data['option_conf']['conf_updated_at']\r\n            await strapi.query(\"plugin-conf\").update({ id: this.douyin_pk_conf['id'] }, this.douyin_pk_conf)\r\n            strapi.log.info('update active cond', this.douyin_pk_conf['data'])\r\n            this.boot()\r\n        }\r\n    }\r\n    async compare_stat_upload(data: any, url: string) {\r\n        // compare count\r\n        let option_arr = this.douyin_pk_conf['data']['option_arr']\r\n        let remote_option_arr = data['option_conf']['option_arr']\r\n        if (option_arr) {\r\n            let is_new_stat = false\r\n\r\n\r\n            // strapi.log.info('remote:', remote_option_arr)\r\n            for (let remote_option of remote_option_arr) {\r\n                let query = remote_option['query']\r\n                if (this.stat_pk[query] !== remote_option['count']) {\r\n                    is_new_stat = true;\r\n                    remote_option['count'] = this.stat_pk[query]\r\n                }\r\n            }\r\n\r\n            if (is_new_stat) {\r\n                strapi.log.info('new stat', this.stat_pk)\r\n                await request({\r\n                    url: url + '/srv/dm-plugin/stat',\r\n                    method: \"POST\",\r\n                    json: true,\r\n                    headers: {\r\n                        \"content-type\": \"application/json\",\r\n                    },\r\n                    body: { option_conf: { option_arr: remote_option_arr } }\r\n                }, function (error: any, response: any, body: any) {\r\n                    if (!error && response.statusCode == 200) {\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    async calc_pk(start = 0) {\r\n        const [entry] = await strapi\r\n            .query(\"plugin-conf\")\r\n            .find({ name: \"douyin-pk\" }) as Array<Idoc_plugin_conf>\r\n\r\n        if (entry) {\r\n            let find_from = entry['stat_from']\r\n            let dm_pages = await strapi\r\n                .query(\"dm-page\")\r\n                .find({ created_at_gt: find_from, _start: start });\r\n            if (dm_pages.length) {\r\n                strapi.log.info(\"active conf option_arr\");\r\n                for(let option of this.douyin_pk_conf[\"data\"][\"option_arr\"]){\r\n                    strapi.log.info(\"--option\", option);\r\n\r\n                }\r\n                for (let page of dm_pages) {\r\n                    this.calc_page(page);\r\n                }\r\n                // this.stat_pk = stat_pk;\r\n                strapi.log.info(\":::stat_from\", find_from, 'start', start);\r\n                strapi.log.info(\":::dm-pages count:\", dm_pages.length);\r\n                strapi.log.info(\":::stat_\", this.stat_pk);\r\n                // strapi.log.info(\":::stat_\", this.stat_pk);\r\n                if (dm_pages.length === 100) {\r\n                    this.calc_pk(start + 100)\r\n                }\r\n            }\r\n            else {\r\n                strapi.log.info(\"stat_pk\", 'no dm-page from', find_from);\r\n            }\r\n        }\r\n    }\r\n    async calc_page(page: any) {\r\n        const find_query = function (text: any, pk_conf: any, stat_pk: any) {\r\n            for (let option of pk_conf[\"data\"][\"option_arr\"]) {\r\n                const { query } = option;\r\n                if (!stat_pk[query]) stat_pk[query] = 0;\r\n                if (query && text.includes(query)) {\r\n                    stat_pk[query]++;\r\n                    // strapi.log.info(\"calc_pk\", query, stat_pk[query]);\r\n                }\r\n            }\r\n\r\n        };\r\n        const { data } = page;\r\n        if (data && data[\"dm_arr\"]) {\r\n            for (let dm of data[\"dm_arr\"]) {\r\n                //   strapi.log.info(\"calc_pk\", dm);\r\n                const { text } = dm;\r\n                find_query(text, this.douyin_pk_conf, this.stat_pk);\r\n            }\r\n        }\r\n\r\n    }\r\n}","import { strapi_ } from \"../../strapi\";\r\nimport { DouyinStat } from \"./dm-page-stat\";\r\nconst strapi = strapi_\r\nconst douyinStatSrv = new DouyinStat()\r\nsetTimeout(async () => {\r\n    await douyinStatSrv.boot()\r\n},2000)\r\nexport const PLUG_POST_dm_page = async (ctx: any) => {\r\n    // post new dmk_list from airtest\r\n    const { dmk_list } = ctx.request.body as any\r\n    let new_dm_arr = [];\r\n    if (dmk_list && dmk_list.length > 0) {\r\n        strapi.log.info(\"receive from airtest<==dmk_list:\", dmk_list.length);\r\n        for (let dmk of dmk_list) {\r\n            let a = dmk.split(\"：\");\r\n            if (a.length > 1) {\r\n                let username = a.shift();\r\n                let text = a.join(\"：\");\r\n                strapi.log.info(`::${username}: `, text);\r\n                new_dm_arr.push({ username, text });\r\n            }\r\n        }\r\n    }\r\n    let entry:any\r\n    if (new_dm_arr.length) {\r\n        // let timestamp_sec = Math.floor(new Date().getTime() / 1000);\r\n        let new_page = {\r\n            data: { dm_arr: new_dm_arr },\r\n        };\r\n        entry = await strapi.query(\"dm-page\").create(new_page);\r\n        let created_at = entry['created_at'] as any\r\n        strapi.log.info('new dm-page created_at', created_at)\r\n        douyinStatSrv.calc_page(new_page);\r\n        strapi.log.info(\"stat_pk\", douyinStatSrv.stat_pk);\r\n    }\r\n    // Send 200 `ok`\r\n    ctx.send({\r\n        message: \"ok\",\r\n        create_count: new_dm_arr.length,\r\n    });\r\n}\r\nexport const PLUG_POST_update_conf = async (ctx: any) => {\r\n    await douyinStatSrv.boot();\r\n    ctx.send({\r\n        message: \"ok\",\r\n        stat: douyinStatSrv.stat_pk,\r\n        conf: douyinStatSrv.douyin_pk_conf[\"data\"] as any\r\n    });\r\n}\r\nexport const PLUG_GET_dm_page = async (ctx: any) => {\r\n    strapi.log.info(\"dm stat start\");\r\n    // Send 200 `ok`\r\n    ctx.send({\r\n        message: \"ok\",\r\n        stat: douyinStatSrv.stat_pk,\r\n        conf: douyinStatSrv.douyin_pk_conf[\"data\"] as any\r\n    });\r\n}","import { PLUG_GET_dm_page, PLUG_POST_dm_page } from './plugins/dm-page.plugin/dm-page';\r\n//┌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┐\r\n//╎                plugin routes\r\n//╎\r\n//╎\r\n//└╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┘\r\n\r\nconst POST_plugins: any = {\r\n    'boot': PLUG_POST_dm_page,\r\n    'dm-page': PLUG_POST_dm_page\r\n}\r\nconst GET_plugins: any = {\r\n    'get': PLUG_GET_dm_page,\r\n}\r\n//┌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┐\r\n//╎                 strapi handler\r\n//╎\r\n//╎\r\n//└╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┘\r\nmodule.exports = {\r\n    index: async (ctx: any) => {\r\n        const { plugin_name } = ctx.params\r\n        await handle(GET_plugins, plugin_name, ctx)\r\n    },\r\n    index_post: async (ctx: any) => {\r\n        const { plugin_name } = ctx.params\r\n        await handle(POST_plugins, plugin_name, ctx)\r\n    }\r\n}\r\n//┌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┐\r\n//╎                  handler\r\n//╎\r\n//╎\r\n//└╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┘\r\nconst handle = async (plugin_routes: any, plugin_name: string, ctx: any) => {\r\n    const func = plugin_routes[plugin_name]\r\n    if (func) await func(ctx)\r\n    else\r\n        ctx.send({\r\n            msg: 'no plugin',\r\n            plugin_name\r\n        })\r\n}"],"names":["strapi"],"mappings":"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"}